{"version":3,"sources":["components/useForm.js","components/form controls/ControlButton.js","components/form controls/Input.js","components/form controls/Select.js","services/employeeService.js","components/form controls/DatePicker.js","components/ProfileImage.js","components/form controls/Popup.js","pages/ProfileForm.js","pages/Employee.js","App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","padding","color","fontWeight","verticalAlign","height","marginRight","Form","props","classes","className","autoComplete","children","label","textTransform","ControlButton","text","size","variant","onClick","Button","startIcon","Input","name","value","onChange","type","TextField","required","disabled","readOnly","Select","options","FormControl","InputLabel","MenuItem","map","item","id","title","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","target","convertToDefEventParameter","large","ProfileImage","Avatar","alt","src","Popup","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","initialFieldValues","firstName","middleName","lastName","headLine","employmentStatus","hireDate","Date","role","birthDate","bloodType","contactNumber","emailAddress","emergencyContact","relationship","emergencyContactNumber","addressLine","barangay","city","province","country","EmployeeForm","useState","values","setValues","editMode","setEditMode","setOpen","handleInputChange","e","changeState","resetForms","handleClickOpen","handleClose","useForm","fullName","Typography","status","completeAddress","Grid","justify","container","alignItems","xs","Tooltip","Employee","paperWrap","backgroundColor","borderRadius","App","Paper","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9451cc51.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\n\r\nexport  function useForm(initialFieldValues) {\r\n\r\n    \r\n    const [values, setValues] = useState(initialFieldValues);\r\n\r\n    \r\n    //Using event handler to change input text\r\n    const handleInputChange = e=>{\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n    }\r\n    //Reset the forms\r\n    const resetForms = () => {\r\n        setEditMode(!editMode)\r\n        setValues(initialFieldValues);\r\n    }\r\n\r\n\r\n    //Change State\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const changeState = () => {setEditMode(!editMode)}\r\n\r\n    //Change Dialog State\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setEditMode(!editMode)\r\n    }; \r\n  \r\n     const handleClose = () => {\r\n    setOpen(false);\r\n     };\r\n    \r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        editMode,\r\n        changeState,\r\n        resetForms,\r\n        open,\r\n        handleClickOpen,\r\n        handleClose\r\n    }\r\n        \r\n    \r\n}\r\n    const useStyles = makeStyles(theme => ({\r\n\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            margin:theme.spacing(1, 'auto'),\r\n            width: '100%',\r\n            padding:theme.spacing(2)\r\n        },\r\n\r\n        '& .MuiFormLabel-root': {\r\n            padding:theme.spacing(2.5)\r\n        },\r\n\r\n        '& .MuiTypography-root': {\r\n            margin:theme.spacing(0, 2)\r\n        },\r\n        '& .MuiAvatar-root': {\r\n            margin:theme.spacing(2)\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'rgba(0, 0, 0, 0.87)',\r\n            fontWeight: '300'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            verticalAlign: 'middle',\r\n            width: '1.2em',\r\n            height: '1.2em',\r\n            marginRight: theme.spacing(1)\r\n\r\n        }\r\n\r\n\r\n        \r\n    }\r\n\r\n    \r\n    }))\r\n\r\n\r\n\r\n\r\nexport  function Form(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        \r\n        <form className={classes.root} autoComplete=\"off\">\r\n            {props.children}\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {Button, makeStyles} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        margin: theme.spacing(2)\r\n    },\r\n    label : {\r\n        textTransform: 'none'\r\n    }\r\n\r\n}))\r\n\r\n\r\n\r\nexport default function ControlButton(props) {\r\n\r\n    const { text, size, color, variant, onClick} = props;\r\n    const classes = useStyles();\r\n\r\n    return ( \r\n            <Button\r\n            variant={variant}\r\n            size={size}\r\n            color={color}\r\n            onClick={onClick}\r\n            classes={{root:classes.root, label:classes.label}}\r\n            startIcon={props.startIcon}\r\n            >\r\n                {text}\r\n            </Button>\r\n        \r\n    )\r\n}\r\n","import { TextField } from '@material-ui/core';\r\n\r\n\r\nexport default function Input(props) {\r\n\r\n    const {name, label, value, onChange, type} = props;\r\n\r\n    return (\r\n        <TextField\r\n                   variant=\"outlined\"\r\n                   label={label}\r\n                   name={name}\r\n                   value={value}\r\n                   onChange = {onChange}\r\n                   required\r\n                   type={type}\r\n                   disabled={props.disabled}\r\n                   readOnly={props.readOnly}             \r\n                   />\r\n    )\r\n}\r\n","import { FormControl, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\r\nimport React from 'react'\r\nexport default function Select(props) {\r\n\r\n    const {name, label, value, onChange, options} = props;\r\n\r\n    return (\r\n        <FormControl\r\n        variant=\"outlined\"\r\n        >\r\n            <InputLabel>{label}</InputLabel>\r\n            <MuiSelect\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            disabled={props.disabled}\r\n            \r\n            >\r\n                <MenuItem value={value}>{value}</MenuItem>\r\n            {\r\n                options.map(\r\n                    item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\r\n                )\r\n\r\n            }\r\n\r\n            \r\n            </MuiSelect>\r\n\r\n        </FormControl>\r\n    )\r\n}\r\n","\r\n\r\nexport const getEmploymentStatusCollection = () => ([\r\n\r\n    { id:'1', title: 'Full-Time'},\r\n    { id:'2', title: 'Part-Time' },\r\n    { id:'3', title: 'Contractual'},\r\n    { id:'4', title: 'Trainee'},\r\n])\r\n\r\nexport const getRoleCollection = () => ([\r\n    { id:'1', title: 'Front-end Developer'},\r\n    { id:'2', title: 'Back-end Developer' },\r\n    { id:'3', title: 'QA Tester'},\r\n    { id:'4', title: 'VP for Solutions Development'},\r\n    { id:'5', title: 'Solutions Architect'},\r\n    { id:'6', title: 'Chief Executive Officer (CEO)'},\r\n    { id:'7', title: 'Executive Assistant'},\r\n    { id:'8', title: 'Marketing'},\r\n\r\n])\r\n\r\nexport const getBloodTypesCollection = () => ([\r\n    { id:'1', title: 'A+'},\r\n    { id:'2', title: 'A-' },\r\n    { id:'3', title: 'B+'},\r\n    { id:'4', title: 'B-'},\r\n    { id:'5', title: 'O+'},\r\n    { id:'6', title: 'O-'},\r\n    { id:'7', title: 'AB+'},\r\n    { id:'8', title: 'AB-'},\r\n\r\n\r\n])","import DateFnsUtils from '@date-io/date-fns';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport React from 'react'\r\n\r\nexport default function DatePicker(props) {\r\n\r\n    const { name, label, value, onChange} = props\r\n\r\n    \r\n    const convertToDefEventParameter = (name, value) => ({\r\n        target: {\r\n            name, value\r\n        }\r\n    })\r\n\r\n    return (\r\n       <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n           <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\r\n                label={label}\r\n                format=\"MM/dd/yyyy\"\r\n                name={name}\r\n                value={value}\r\n                disabled={props.disabled}\r\n                onChange={date => onChange(convertToDefEventParameter(name, date))}\r\n           />\r\n       </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Avatar, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    large: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20),\r\n      }\r\n\r\n}))\r\n\r\nexport default function ProfileImage() {\r\n    const classes=useStyles();\r\n\r\n    return (\r\n        <Avatar alt=\"profileImage\" src=\"#\" className={classes.large} />\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\n\r\nexport default function Popup(props) {\r\n\r\n    return (\r\n        <>\r\n        \r\n            <Dialog\r\n                open={props.open}\r\n                onClose={props.onClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Info\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Changes Successfully Saved\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={props.onClose} color=\"primary\">\r\n                    Okay\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\n","import { Grid, Typography, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {useForm, Form} from '../components/useForm';\r\nimport ControlButton from '../components/form controls/ControlButton'\r\nimport Input from '../components/form controls/Input';\r\nimport Select from '../components/form controls/Select';\r\nimport * as employeeService from '../services/employeeService';\r\nimport DatePicker from '../components/form controls/DatePicker';\r\nimport ProfileImage from '../components/ProfileImage';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport RecentActorsIcon from '@material-ui/icons/RecentActors';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Popup from '../components/form controls/Popup';\r\n\r\n\r\n//Set default values for fields\r\nconst initialFieldValues = {\r\n\r\n    id: 0,\r\n    firstName: 'John Mario',\r\n    middleName: 'Makiling',\r\n    lastName: 'Dela Cruz',\r\n    headLine: 'A self-proclaimed full-stack developer :)',\r\n    employmentStatus: employeeService.getEmploymentStatusCollection()[0].title,\r\n    hireDate: new Date(),\r\n    role: employeeService.getRoleCollection()[0].title,\r\n    birthDate: \"01/01/1990\",\r\n    bloodType: employeeService.getBloodTypesCollection()[7].title,\r\n    contactNumber: \"09334811200\",\r\n    emailAddress: \"john.mario@gmail.com\",\r\n    emergencyContact: \"Clara Maria Dela Cruz\",\r\n    relationship: \"Spouse\",\r\n    emergencyContactNumber: \"09335822300\",\r\n    addressLine: \"Unit 404, Ceres Towers\",\r\n    barangay: \"Canduman\",\r\n    city: \"Cebu City\",\r\n    province: \"Cebu\",\r\n    country: \"Philippines\",\r\n}\r\n\r\n\r\n\r\n\r\nexport default function EmployeeForm() {\r\n   \r\n//Calling useState function\r\n   const{\r\n        values,\r\n        handleInputChange,\r\n        changeState,\r\n        editMode,\r\n        resetForms,\r\n        open,\r\n        handleClickOpen,\r\n        handleClose\r\n    } = useForm(initialFieldValues);\r\n\r\n    \r\n\r\n\r\n   const fullName = \r\n                    <Typography variant=\"h4\">\r\n                        {values.firstName} {values.middleName} {values.lastName}\r\n                    </Typography>\r\n\r\n   const status = <Typography>\r\n                        {values.headLine}\r\n                </Typography>\r\n   \r\n   const completeAddress = <Typography>\r\n                        {values.addressLine} {values.barangay}, {values.city}, {values.province}, {values.country}\r\n                </Typography>           \r\n \r\n\r\n\r\n    return (\r\n    <>\r\n        <Form>\r\n        <Grid \r\n        justify=\"space-between\" \r\n        container \r\n        \r\n        alignItems=\"center\"\r\n        >\r\n            <Grid container item xs={4}>\r\n            \r\n            <Typography variant=\"h6\">\r\n            <PersonOutlineIcon />\r\n            Profile Information\r\n            </Typography>               \r\n                          \r\n            </Grid>\r\n            <Grid item xs={4}></Grid>\r\n           \r\n              \r\n        <div>      \r\n            <Grid item xs={4}>        \r\n                {!editMode ?\r\n              <Tooltip title=\"Edit\">    \r\n                    <ControlButton\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    text=\"Edit\"\r\n                    onClick={changeState}\r\n                    startIcon={<EditIcon />}\r\n                    />\r\n                    </Tooltip> \r\n               : <div></div> }   \r\n            </Grid>     \r\n         </div>\r\n          \r\n\r\n\r\n        </Grid>\r\n        <Grid container>\r\n            <Grid item xs={3}>\r\n                <ProfileImage \r\n                type=\"file\"/>\r\n\r\n            </Grid>\r\n\r\n            <Grid container item xs={9}>\r\n                \r\n                {fullName}\r\n                {status}\r\n                {completeAddress}\r\n                \r\n            </Grid>\r\n\r\n            \r\n\r\n        </Grid>\r\n                                    \r\n                <Grid>\r\n                <Typography variant=\"h6\">\r\n                <RecentActorsIcon />\r\n                Full Name\r\n                </Typography>\r\n                    <Grid item>\r\n                    \r\n                    <Input \r\n                    label={\"First Name\"}\r\n                    name={\"firstName\"}\r\n                    value={values.firstName}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n\r\n                    <Input\r\n                    label={\"Middle Name\"}\r\n                    name={\"middleName\"}\r\n                    value={values.middleName}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n\r\n                    <Input                   \r\n                    label={\"Last Name\"}\r\n                    name=\"lastName\"\r\n                    value={values.lastName}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n        \r\n        {editMode?     \r\n        <Grid>\r\n            <Typography variant=\"h6\">\r\n                <FormatQuoteIcon />\r\n            Headline\r\n            </Typography>\r\n            <Grid item>\r\n                <Input \r\n                label={\"Say Something About Yourself\"}\r\n                name={\"headLine\"}\r\n                value={values.headLine}\r\n                onChange = {handleInputChange}\r\n                disabled = {!editMode}\r\n                readOnly = {!editMode}\r\n                />\r\n            </Grid>\r\n\r\n        </Grid>        \r\n        :<div>\r\n        </div>}\r\n\r\n        <Typography variant=\"h6\">\r\n            <WorkIcon />\r\n                Employment\r\n                </Typography>\r\n            <Grid container>\r\n                \r\n                <Grid item xs={6}>\r\n                <Select\r\n                name={\"employmentStatus\"}\r\n                label={\"Status\"}\r\n                value={values.employmentStatus}\r\n                onChange = {handleInputChange}\r\n                options={employeeService.getEmploymentStatusCollection()}\r\n                disabled = {!editMode}\r\n                readOnly = {!editMode}\r\n                />\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>                   \r\n                        <DatePicker \r\n                        name={\"hireDate\"}\r\n                        label={\"Date Started\"}\r\n                        value={values.hireDate}\r\n                        onChange = {handleInputChange}\r\n                        disabled = {!editMode}\r\n                        readOnly = {!editMode}\r\n                        />\r\n                </Grid>\r\n            </Grid>\r\n\r\n        <Grid>\r\n            <Select\r\n            name={\"role\"}\r\n            label={\"Role\"}\r\n            value={values.role}\r\n            onChange = {handleInputChange}\r\n            options={employeeService.getRoleCollection()}\r\n            disabled = {!editMode}\r\n            readOnly = {!editMode}\r\n            \r\n            />\r\n        </Grid>\r\n            \r\n        <Typography variant=\"h6\">\r\n        <InfoIcon />\r\n                    Other Info\r\n                </Typography>\r\n            <Grid container>\r\n                \r\n\r\n                <Grid item xs={6}>\r\n                    <DatePicker\r\n                    name={\"birthDate\"}\r\n                    label={\"Birth Date\"}\r\n                    value={values.birthDate}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                <Select\r\n                    name={\"bloodType\"}\r\n                    label={\"Blood Type\"}\r\n                    value={values.bloodType}\r\n                    onChange = {handleInputChange}\r\n                    options={employeeService.getBloodTypesCollection()}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                 />   \r\n                 </Grid>   \r\n            </Grid>\r\n               \r\n            <Typography variant=\"h6\">\r\n            <ContactPhoneIcon />\r\n                    Contact Info\r\n                </Typography>\r\n            <Grid container>\r\n            \r\n            \r\n                <Grid item xs={6}>\r\n                    \r\n                    <Input\r\n                    name={\"contactNumber\"}\r\n                    label={\"Contact Number\"}\r\n                    value={values.contactNumber}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                <Input\r\n                    name={\"emailAddress\"}\r\n                    label={\"Email Address\"}\r\n                    value={values.emailAddress}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                 />   \r\n                 </Grid>   \r\n            </Grid>\r\n        \r\n\r\n        \r\n        <Typography variant=\"h6\">\r\n            <ContactPhoneIcon />\r\n                    Emergency Contact\r\n                </Typography>\r\n\r\n            <Grid>\r\n            <Input\r\n                    name={\"emergencyContact\"}\r\n                    label={\"Contact Person\"}\r\n                    value={values.emergencyContact}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n            </Grid>   \r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Input\r\n                    name={\"relationship\"}\r\n                    label={\"Relationship\"}\r\n                    value={values.relationship}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                <Input\r\n                    name={\"emergencyContactNumber\"}\r\n                    label={\"Contact Number\"}\r\n                    value={values.emergencyContactNumber}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                 />   \r\n                 </Grid>   \r\n            </Grid>\r\n            \r\n            <Typography variant=\"h6\">\r\n            <HomeIcon />\r\n                Home Address\r\n            </Typography>\r\n            <Grid container>\r\n            <Input\r\n                    name={\"addressLine\"}\r\n                    label={\"Address Line\"}\r\n                    value={values.addressLine}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n            </Grid>\r\n            <Grid container>\r\n            <Input\r\n                    name={\"barangay\"}\r\n                    label={\"Barangay\"}\r\n                    value={values.barangay}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n            </Grid>\r\n            <Grid>\r\n            <Input\r\n                    name={\"city\"}\r\n                    label={\"City\"}\r\n                    value={values.city}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n            </Grid>\r\n            <Grid>\r\n            <Input\r\n                    name={\"province\"}\r\n                    label={\"Province\"}\r\n                    value={values.province}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n            </Grid>\r\n            <Grid>\r\n            <Input\r\n                    name={\"country\"}\r\n                    label={\"Country\"}\r\n                    value={values.country}\r\n                    onChange = {handleInputChange}\r\n                    disabled = {!editMode}\r\n                    readOnly = {!editMode}\r\n                    />\r\n            </Grid>\r\n        \r\n    {editMode ?\r\n   \r\n   <Grid container >\r\n       <Grid item xs={4}></Grid>\r\n\r\n       <Grid item xs={4}>           \r\n       <ControlButton\r\n       variant=\"contained\"\r\n       color=\"default\"\r\n       size=\"large\"\r\n       text=\"Cancel\"\r\n       onClick={resetForms}\r\n       />\r\n       <ControlButton\r\n       variant=\"contained\"\r\n       color=\"primary\"\r\n       size=\"large\"\r\n       text=\"Save\"\r\n       onClick={handleClickOpen}       \r\n       /> \r\n       </Grid>\r\n\r\n       <Grid item xs={4}></Grid>\r\n       \r\n        </Grid>\r\n    \r\n        :<div>\r\n        </div>\r\n         }               \r\n        \r\n        <Popup\r\n        open={open}\r\n        onClose={handleClose}\r\n        onClick={handleClose}\r\n       />\r\n    </Form>      \r\n     </>  \r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProfileForm from './ProfileForm'\r\n\r\nexport default function Employee() {\r\n    return (\r\n        <div>\r\n            <ProfileForm />\r\n        </div>\r\n    )\r\n}\r\n","import { CssBaseline, makeStyles, Paper } from '@material-ui/core';\nimport '../App/App.css';\nimport Employee from '../pages/Employee';\n\n\n\n//Converting CSS to JSS\nconst useStyles = makeStyles((theme) => ({\n\n  paperWrap: {\n    backgroundColor: \"#fff\",\n    margin: theme.spacing(2, 'auto'),\n    width: theme.spacing(100),\n    borderRadius: theme.spacing(2)\n  }\n\n}))\n\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n    <>\n    <Paper className={classes.paperWrap}>\n      <Employee />\n    </Paper>\n    <CssBaseline />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}